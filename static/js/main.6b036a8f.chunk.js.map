{"version":3,"sources":["components/video_item/video_item.module.css","app.module.css","components/video_detail/video_detail.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/navbar.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js"],"names":["module","exports","Videoitem","video","onVideoClick","snippet","displayType","display","styles","list","grid","className","item","onClick","src","thumbnails","default","url","alt","title","VideoList","videos","map","id","Navbar","onSearch","inputRef","useRef","handleSearch","value","current","href","ref","type","onKeyPress","event","key","VideoDetail","detail_sec","width","height","frameborder","allowfullscreen","channelTitle","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","fetch","method","redirect","then","response","json","result","items","catch","error","console","log","query","videoId","content","detail","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b036a8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"video_item_item__2212h\",\"list\":\"video_item_list__2jYRY\",\"grid\":\"video_item_grid__2iJDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"app_content__ckDFI\",\"detail\":\"app_detail__Xmsnl\",\"list\":\"app_list__2we4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail_sec\":\"video_detail_detail_sec__3zpSQ\",\"video\":\"video_detail_video__3-LF_\"};","import React from 'react';\nimport styles from \"./video_item.module.css\";\nconst Videoitem = ({video,video:{snippet},onVideoClick, display}) => {\n\n    // 반복하는게 싫다면\n    // ({video}) ---props.video 축약\n    // 이름을 변경 \n    // ({video:itemVidoe})---이름 변경\n    const displayType = display == 'list'  ?  styles.list : styles.grid;\n    return (\n        <li className={`${styles.item} ${displayType}`} onClick={() => onVideoClick(video)}>\n            <div>\n                <img src={video.snippet.thumbnails.default.url} alt=\"이미지\"/>\n                <p>{video.snippet.title}</p>\n            </div>\n        </li>\n    );\n}\n\nexport default Videoitem;","import React from 'react';\nimport Videoitem from '../video_item/video_item';\nimport styles from './video_list.module.css';\n\n\nconst VideoList = ({videos,onVideoClick, display}) => (\n  <ul className={styles.videos}>\n    {videos.map(video => (\n      <Videoitem key={video.id} video={video} onVideoClick={onVideoClick} display={display}/>\n    ))}\n  </ul>\n);\n\nexport default VideoList;","import React, { useRef } from 'react';\nimport './common.css';\nconst Navbar = ({onSearch}) => {\n    const inputRef = useRef();\n    const handleSearch = () => {\n        const value = inputRef.current.value;\n        // console.log(inputRef.current.value);\n        onSearch(value)\n    }\n    const onKeyPress = (event) => {\n        if(event.key === 'Enter'){\n            handleSearch();\n        }\n    }\n    const onclick = () => {\n        handleSearch();\n    }\n    return (\n        <div className=\"search\">\n            <div className=\"wrap\">\n                <h1>\n                    <a href=\"./\"><img src=\"./images/logo.png\" alt=\"로고\"/>\n                        <span>Youtube</span>\n                    </a>\n                </h1>\n                <div className=\"searcch_inpbtn\">\n                    <input ref={inputRef}type=\"text\" className=\"search-inp\" onKeyPress={onKeyPress}/>\n                    <button><img src=\"./images/search.png\" alt=\"검색이미지\" onClick={onclick}/></button>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Navbar;","import React from 'react';\nimport styles from './video_detail.module.css';\n\nconst VideoDetail = ({video,video:{snippet}}) => \n   \n        (\n            <section className={styles.detail_sec}>\n                <iframe\n                        className ={styles.video}\n                        type=\"text/html\"\n                        width=\"100%\"\n                        height=\"500\"\n                        src={`https://www.youtube.com/embed/${video.id}`}\n                        frameborder=\"0\"\n                        allowfullscreen>\n                </iframe>\n                <h2>제목 : {snippet.title}</h2>\n                <h3>\n                    {snippet.channelTitle}\n                </h3>\n                <p>   \n                    {snippet.description}\n                </p>\n            </section>\n        );\n\n    \n\nexport default VideoDetail;","import React, {useState,useEffect} from 'react';\nimport VideoList from './components/video_list/video_list';\nimport Navbar from './components/navbar';\nimport VideoDetail from './components/video_detail/video_detail';\nimport styles from './app.module.css';\n\nfunction App({youtube}) {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo,setSelectedVideo] = useState(null);\n  \n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n  \n  const search = query => {\n    // youtube.search(query).then(videos => setVideos(videos));\n\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(`https://youtube.googleapis.com/youtube/v3/search/?part=snippet&maxResults=20&q=${query}&type=video&key=AIzaSyC0idE6awq0zQwFDJOKW1FVFCPnV9uNnuI`, requestOptions)\n      .then(response => response.json())\n      .then(result => result.items.map(item =>({...item, id:item.id.videoId}))\n      )\n      .then(items => {\n        setVideos(items);\n        setSelectedVideo(null);\n      })\n      .then(items => console.log(query))\n      // .then(videos => setVideos(videos))\n      .catch(error => console.log('error', error));\n      \n    \n  }\n  \n  useEffect(()=>{\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    \n    fetch(\"https://youtube.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=20&key=AIzaSyC0idE6awq0zQwFDJOKW1FVFCPnV9uNnuI\", \n    requestOptions\n    )\n      .then(response => response.json())\n      .then(result => setVideos(result.items))\n      .catch(error => console.log('error', error));\n  },[]);\n return(\n  <> \n  <Navbar onSearch={search}/> \n  <div className=\"wrap\">\n    <section className={styles.content}>\n      {selectedVideo && \n        <div className={styles.detail}>\n          <VideoDetail video={selectedVideo} />\n        </div>\n      }\n      <div className={styles.list}>\n        <VideoList \n            videos={videos} \n            onVideoClick={selectVideo}  \n            display = {selectedVideo ?  'list': 'grid'}\n        />\n      </div>\n    </section>\n    \n      \n    \n\n    \n  </div>\n  </>\n )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}